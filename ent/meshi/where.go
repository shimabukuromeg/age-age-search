// Code generated by ent, DO NOT EDIT.

package meshi

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/shimabukuromeg/ageage-search/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldID, id))
}

// ArticleID applies equality check predicate on the "article_id" field. It's identical to ArticleIDEQ.
func ArticleID(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldArticleID, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldTitle, v))
}

// ImageURL applies equality check predicate on the "image_url" field. It's identical to ImageURLEQ.
func ImageURL(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldImageURL, v))
}

// StoreName applies equality check predicate on the "store_name" field. It's identical to StoreNameEQ.
func StoreName(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldStoreName, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldAddress, v))
}

// SiteURL applies equality check predicate on the "site_url" field. It's identical to SiteURLEQ.
func SiteURL(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldSiteURL, v))
}

// PublishedDate applies equality check predicate on the "published_date" field. It's identical to PublishedDateEQ.
func PublishedDate(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldPublishedDate, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldCreatedAt, v))
}

// ArticleIDEQ applies the EQ predicate on the "article_id" field.
func ArticleIDEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldArticleID, v))
}

// ArticleIDNEQ applies the NEQ predicate on the "article_id" field.
func ArticleIDNEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldArticleID, v))
}

// ArticleIDIn applies the In predicate on the "article_id" field.
func ArticleIDIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldArticleID, vs...))
}

// ArticleIDNotIn applies the NotIn predicate on the "article_id" field.
func ArticleIDNotIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldArticleID, vs...))
}

// ArticleIDGT applies the GT predicate on the "article_id" field.
func ArticleIDGT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldArticleID, v))
}

// ArticleIDGTE applies the GTE predicate on the "article_id" field.
func ArticleIDGTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldArticleID, v))
}

// ArticleIDLT applies the LT predicate on the "article_id" field.
func ArticleIDLT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldArticleID, v))
}

// ArticleIDLTE applies the LTE predicate on the "article_id" field.
func ArticleIDLTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldArticleID, v))
}

// ArticleIDContains applies the Contains predicate on the "article_id" field.
func ArticleIDContains(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContains(FieldArticleID, v))
}

// ArticleIDHasPrefix applies the HasPrefix predicate on the "article_id" field.
func ArticleIDHasPrefix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasPrefix(FieldArticleID, v))
}

// ArticleIDHasSuffix applies the HasSuffix predicate on the "article_id" field.
func ArticleIDHasSuffix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasSuffix(FieldArticleID, v))
}

// ArticleIDEqualFold applies the EqualFold predicate on the "article_id" field.
func ArticleIDEqualFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEqualFold(FieldArticleID, v))
}

// ArticleIDContainsFold applies the ContainsFold predicate on the "article_id" field.
func ArticleIDContainsFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContainsFold(FieldArticleID, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContainsFold(FieldTitle, v))
}

// ImageURLEQ applies the EQ predicate on the "image_url" field.
func ImageURLEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldImageURL, v))
}

// ImageURLNEQ applies the NEQ predicate on the "image_url" field.
func ImageURLNEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldImageURL, v))
}

// ImageURLIn applies the In predicate on the "image_url" field.
func ImageURLIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldImageURL, vs...))
}

// ImageURLNotIn applies the NotIn predicate on the "image_url" field.
func ImageURLNotIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldImageURL, vs...))
}

// ImageURLGT applies the GT predicate on the "image_url" field.
func ImageURLGT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldImageURL, v))
}

// ImageURLGTE applies the GTE predicate on the "image_url" field.
func ImageURLGTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldImageURL, v))
}

// ImageURLLT applies the LT predicate on the "image_url" field.
func ImageURLLT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldImageURL, v))
}

// ImageURLLTE applies the LTE predicate on the "image_url" field.
func ImageURLLTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldImageURL, v))
}

// ImageURLContains applies the Contains predicate on the "image_url" field.
func ImageURLContains(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContains(FieldImageURL, v))
}

// ImageURLHasPrefix applies the HasPrefix predicate on the "image_url" field.
func ImageURLHasPrefix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasPrefix(FieldImageURL, v))
}

// ImageURLHasSuffix applies the HasSuffix predicate on the "image_url" field.
func ImageURLHasSuffix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasSuffix(FieldImageURL, v))
}

// ImageURLEqualFold applies the EqualFold predicate on the "image_url" field.
func ImageURLEqualFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEqualFold(FieldImageURL, v))
}

// ImageURLContainsFold applies the ContainsFold predicate on the "image_url" field.
func ImageURLContainsFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContainsFold(FieldImageURL, v))
}

// StoreNameEQ applies the EQ predicate on the "store_name" field.
func StoreNameEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldStoreName, v))
}

// StoreNameNEQ applies the NEQ predicate on the "store_name" field.
func StoreNameNEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldStoreName, v))
}

// StoreNameIn applies the In predicate on the "store_name" field.
func StoreNameIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldStoreName, vs...))
}

// StoreNameNotIn applies the NotIn predicate on the "store_name" field.
func StoreNameNotIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldStoreName, vs...))
}

// StoreNameGT applies the GT predicate on the "store_name" field.
func StoreNameGT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldStoreName, v))
}

// StoreNameGTE applies the GTE predicate on the "store_name" field.
func StoreNameGTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldStoreName, v))
}

// StoreNameLT applies the LT predicate on the "store_name" field.
func StoreNameLT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldStoreName, v))
}

// StoreNameLTE applies the LTE predicate on the "store_name" field.
func StoreNameLTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldStoreName, v))
}

// StoreNameContains applies the Contains predicate on the "store_name" field.
func StoreNameContains(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContains(FieldStoreName, v))
}

// StoreNameHasPrefix applies the HasPrefix predicate on the "store_name" field.
func StoreNameHasPrefix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasPrefix(FieldStoreName, v))
}

// StoreNameHasSuffix applies the HasSuffix predicate on the "store_name" field.
func StoreNameHasSuffix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasSuffix(FieldStoreName, v))
}

// StoreNameEqualFold applies the EqualFold predicate on the "store_name" field.
func StoreNameEqualFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEqualFold(FieldStoreName, v))
}

// StoreNameContainsFold applies the ContainsFold predicate on the "store_name" field.
func StoreNameContainsFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContainsFold(FieldStoreName, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContainsFold(FieldAddress, v))
}

// SiteURLEQ applies the EQ predicate on the "site_url" field.
func SiteURLEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldSiteURL, v))
}

// SiteURLNEQ applies the NEQ predicate on the "site_url" field.
func SiteURLNEQ(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldSiteURL, v))
}

// SiteURLIn applies the In predicate on the "site_url" field.
func SiteURLIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldSiteURL, vs...))
}

// SiteURLNotIn applies the NotIn predicate on the "site_url" field.
func SiteURLNotIn(vs ...string) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldSiteURL, vs...))
}

// SiteURLGT applies the GT predicate on the "site_url" field.
func SiteURLGT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldSiteURL, v))
}

// SiteURLGTE applies the GTE predicate on the "site_url" field.
func SiteURLGTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldSiteURL, v))
}

// SiteURLLT applies the LT predicate on the "site_url" field.
func SiteURLLT(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldSiteURL, v))
}

// SiteURLLTE applies the LTE predicate on the "site_url" field.
func SiteURLLTE(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldSiteURL, v))
}

// SiteURLContains applies the Contains predicate on the "site_url" field.
func SiteURLContains(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContains(FieldSiteURL, v))
}

// SiteURLHasPrefix applies the HasPrefix predicate on the "site_url" field.
func SiteURLHasPrefix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasPrefix(FieldSiteURL, v))
}

// SiteURLHasSuffix applies the HasSuffix predicate on the "site_url" field.
func SiteURLHasSuffix(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldHasSuffix(FieldSiteURL, v))
}

// SiteURLEqualFold applies the EqualFold predicate on the "site_url" field.
func SiteURLEqualFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldEqualFold(FieldSiteURL, v))
}

// SiteURLContainsFold applies the ContainsFold predicate on the "site_url" field.
func SiteURLContainsFold(v string) predicate.Meshi {
	return predicate.Meshi(sql.FieldContainsFold(FieldSiteURL, v))
}

// PublishedDateEQ applies the EQ predicate on the "published_date" field.
func PublishedDateEQ(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldPublishedDate, v))
}

// PublishedDateNEQ applies the NEQ predicate on the "published_date" field.
func PublishedDateNEQ(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldPublishedDate, v))
}

// PublishedDateIn applies the In predicate on the "published_date" field.
func PublishedDateIn(vs ...time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldPublishedDate, vs...))
}

// PublishedDateNotIn applies the NotIn predicate on the "published_date" field.
func PublishedDateNotIn(vs ...time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldPublishedDate, vs...))
}

// PublishedDateGT applies the GT predicate on the "published_date" field.
func PublishedDateGT(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldPublishedDate, v))
}

// PublishedDateGTE applies the GTE predicate on the "published_date" field.
func PublishedDateGTE(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldPublishedDate, v))
}

// PublishedDateLT applies the LT predicate on the "published_date" field.
func PublishedDateLT(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldPublishedDate, v))
}

// PublishedDateLTE applies the LTE predicate on the "published_date" field.
func PublishedDateLTE(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldPublishedDate, v))
}

// PublishedDateIsNil applies the IsNil predicate on the "published_date" field.
func PublishedDateIsNil() predicate.Meshi {
	return predicate.Meshi(sql.FieldIsNull(FieldPublishedDate))
}

// PublishedDateNotNil applies the NotNil predicate on the "published_date" field.
func PublishedDateNotNil() predicate.Meshi {
	return predicate.Meshi(sql.FieldNotNull(FieldPublishedDate))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Meshi {
	return predicate.Meshi(sql.FieldLTE(FieldCreatedAt, v))
}

// HasMunicipality applies the HasEdge predicate on the "municipality" edge.
func HasMunicipality() predicate.Meshi {
	return predicate.Meshi(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MunicipalityTable, MunicipalityColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMunicipalityWith applies the HasEdge predicate on the "municipality" edge with a given conditions (other predicates).
func HasMunicipalityWith(preds ...predicate.Municipality) predicate.Meshi {
	return predicate.Meshi(func(s *sql.Selector) {
		step := newMunicipalityStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Meshi) predicate.Meshi {
	return predicate.Meshi(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Meshi) predicate.Meshi {
	return predicate.Meshi(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Meshi) predicate.Meshi {
	return predicate.Meshi(func(s *sql.Selector) {
		p(s.Not())
	})
}
